Program([
	FuncDecl(simpleFunc, VoidType, [], None, BlockStmt([VarDecl(d, IntegerType), VarDecl(m, IntegerType), VarDecl(y, IntegerType), CallStmt(getInput, Id(d), Id(m), Id(y)), VarDecl(a, IntegerType), VarDecl(b, IntegerType), VarDecl(D, IntegerType), AssignStmt(Id(D), BinExpr(-, Id(y), IntegerLit(1))), VarDecl(K, IntegerType, BinExpr(*, IntegerLit(365), Id(D))), AssignStmt(Id(D), BinExpr(%, Id(y), IntegerLit(4))), VarDecl(day_num, IntegerType), VarDecl(kq, IntegerType, IntegerLit(0)), ForStmt(AssignStmt(Id(a), IntegerLit(1)), BinExpr(<=, Id(a), BinExpr(-, Id(y), IntegerLit(1))), BinExpr(+, Id(a), IntegerLit(1)), BlockStmt([IfStmt(BinExpr(==, BinExpr(%, Id(a), IntegerLit(100)), IntegerLit(0)), BlockStmt([IfStmt(BinExpr(==, BinExpr(%, Id(a), IntegerLit(400)), IntegerLit(0)), AssignStmt(Id(K), BinExpr(+, Id(K), IntegerLit(1))))]), IfStmt(BinExpr(==, BinExpr(%, Id(a), IntegerLit(4)), IntegerLit(0)), AssignStmt(Id(K), BinExpr(+, Id(K), IntegerLit(1)))))])), IfStmt(BinExpr(==, BinExpr(%, Id(nam), IntegerLit(100)), IntegerLit(0)), BlockStmt([IfStmt(BinExpr(==, BinExpr(%, Id(nam), IntegerLit(400)), IntegerLit(0)), AssignStmt(Id(kq), IntegerLit(1)), AssignStmt(Id(kq), IntegerLit(0)))]), BlockStmt([IfStmt(BinExpr(==, BinExpr(%, Id(nam), IntegerLit(4)), IntegerLit(0)), AssignStmt(Id(kq), IntegerLit(1)), AssignStmt(Id(kq), IntegerLit(0)))])), VarDecl(ds, IntegerType, IntegerLit(0)), ForStmt(AssignStmt(Id(a), IntegerLit(1)), BinExpr(<=, Id(a), Id(m)), BinExpr(+, Id(a), IntegerLit(1)), BlockStmt([IfStmt(BinExpr(||, BinExpr(||, BinExpr(||, BinExpr(||, BinExpr(||, BinExpr(||, BinExpr(==, Id(a), IntegerLit(1)), BinExpr(==, Id(a), IntegerLit(3))), BinExpr(==, Id(a), IntegerLit(5))), BinExpr(==, Id(a), IntegerLit(7))), BinExpr(==, Id(a), IntegerLit(8))), BinExpr(==, Id(a), IntegerLit(10))), BinExpr(==, Id(a), IntegerLit(12))), AssignStmt(Id(day_num), IntegerLit(31))), IfStmt(BinExpr(||, BinExpr(||, BinExpr(||, BinExpr(==, Id(a), IntegerLit(4)), BinExpr(==, Id(a), IntegerLit(6))), BinExpr(==, Id(a), IntegerLit(9))), BinExpr(==, Id(a), IntegerLit(11))), AssignStmt(Id(day_num), IntegerLit(30))), IfStmt(BinExpr(==, Id(a), IntegerLit(2)), BlockStmt([IfStmt(BinExpr(==, Id(kq), IntegerLit(1)), AssignStmt(Id(day_num), IntegerLit(29)), AssignStmt(Id(day_num), IntegerLit(28)))])), ForStmt(AssignStmt(Id(b), IntegerLit(1)), BinExpr(<=, Id(b), Id(day_num)), BinExpr(+, Id(b), IntegerLit(1)), BlockStmt([AssignStmt(Id(K), BinExpr(+, Id(K), IntegerLit(1))), IfStmt(BinExpr(&&, BinExpr(==, Id(b), Id(d)), BinExpr(==, Id(a), Id(m))), BlockStmt([AssignStmt(Id(ds), IntegerLit(1)), BreakStmt()]))])), IfStmt(BinExpr(==, Id(ds), IntegerLit(1)), BreakStmt())])), AssignStmt(Id(K), BinExpr(%, Id(K), IntegerLit(7))), IfStmt(BinExpr(==, Id(K), IntegerLit(0)), CallStmt(print, StringLit(Chu nhat))), IfStmt(BinExpr(==, Id(K), IntegerLit(1)), CallStmt(print, StringLit(Thu Hai))), IfStmt(BinExpr(==, Id(K), IntegerLit(2)), CallStmt(print, StringLit(Thu Ba))), IfStmt(BinExpr(==, Id(K), IntegerLit(3)), CallStmt(print, StringLit(Thu Tu))), IfStmt(BinExpr(==, Id(K), IntegerLit(4)), CallStmt(print, StringLit(Thu Nam))), IfStmt(BinExpr(==, Id(K), IntegerLit(5)), CallStmt(print, StringLit(Thu Sau)), CallStmt(print, StringLit(Thu Bay)))]))
])